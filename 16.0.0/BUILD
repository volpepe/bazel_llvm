# LLVM 16.0.0.
package(default_visibility = ["//visibility:public"])

licenses(["notice"])

cc_library(
    name = "16.0.0",
    data = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:libdir"],
    defines = [
        "__STDC_CONSTANT_MACROS",
        "__STDC_LIMIT_MACROS",
    ],
    linkopts = [
        "-Wl,-rpath,$(location @clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:libdir)/",
        "-L$(location @clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:libdir)/",
        "-lrt",
        "-ldl",
        "-ltinfo",
        "-lpthread",
        "-lm",
        "-lz",
       # clang libs
        "-lclangARCMigrate",
        "-lclangFrontend",
        "-lclangFrontendTool",
        "-lclangDriver",
        "-lclangSerialization",
        "-lclangCodeGen",
        "-lclangParse",
        "-lclangSema",
        "-lclangRewriteFrontend",
        "-lclangRewrite",
        "-lclangStaticAnalyzerFrontend",
        "-lclangStaticAnalyzerCheckers",
        "-lclangStaticAnalyzerCore",
        "-lclangAnalysis",
        "-lclangEdit",
        "-lclangAST",
        "-lclangASTMatchers",
        "-lclangLex",
        "-lclangBasic",
        "-lclangTooling",
        "-lclangToolingCore",
        # llvm-config --libs
        "-lLLVMWindowsManifest",
        "-lLLVMXRay",
        "-lLLVMLibDriver",
        "-lLLVMDlltoolDriver",
        "-lLLVMCoverage",
        "-lLLVMLineEditor",
        "-lLLVMXCoreDisassembler",
        "-lLLVMXCoreCodeGen",
        "-lLLVMXCoreDesc",
        "-lLLVMXCoreInfo",
        "-lLLVMX86TargetMCA",
        "-lLLVMX86Disassembler",
        "-lLLVMX86AsmParser",
        "-lLLVMX86CodeGen",
        "-lLLVMX86Desc",
        "-lLLVMX86Info",
        "-lLLVMWebAssemblyDisassembler",
        "-lLLVMWebAssemblyAsmParser",
        "-lLLVMWebAssemblyCodeGen",
        "-lLLVMWebAssemblyDesc",
        "-lLLVMWebAssemblyUtils",
        "-lLLVMWebAssemblyInfo",
        "-lLLVMVEDisassembler",
        "-lLLVMVEAsmParser",
        "-lLLVMVECodeGen",
        "-lLLVMVEDesc",
        "-lLLVMVEInfo",
        "-lLLVMSystemZDisassembler",
        "-lLLVMSystemZAsmParser",
        "-lLLVMSystemZCodeGen",
        "-lLLVMSystemZDesc",
        "-lLLVMSystemZInfo",
        "-lLLVMSparcDisassembler",
        "-lLLVMSparcAsmParser",
        "-lLLVMSparcCodeGen",
        "-lLLVMSparcDesc",
        "-lLLVMSparcInfo",
        "-lLLVMRISCVTargetMCA",
        "-lLLVMRISCVDisassembler",
        "-lLLVMRISCVAsmParser",
        "-lLLVMRISCVCodeGen",
        "-lLLVMRISCVDesc",
        "-lLLVMRISCVInfo",
        "-lLLVMPowerPCDisassembler",
        "-lLLVMPowerPCAsmParser",
        "-lLLVMPowerPCCodeGen",
        "-lLLVMPowerPCDesc",
        "-lLLVMPowerPCInfo",
        "-lLLVMNVPTXCodeGen",
        "-lLLVMNVPTXDesc",
        "-lLLVMNVPTXInfo",
        "-lLLVMMSP430Disassembler",
        "-lLLVMMSP430AsmParser",
        "-lLLVMMSP430CodeGen",
        "-lLLVMMSP430Desc",
        "-lLLVMMSP430Info",
        "-lLLVMMipsDisassembler",
        "-lLLVMMipsAsmParser",
        "-lLLVMMipsCodeGen",
        "-lLLVMMipsDesc",
        "-lLLVMMipsInfo",
        "-lLLVMLoongArchDisassembler",
        "-lLLVMLoongArchAsmParser",
        "-lLLVMLoongArchCodeGen",
        "-lLLVMLoongArchDesc",
        "-lLLVMLoongArchInfo",
        "-lLLVMLanaiDisassembler",
        "-lLLVMLanaiCodeGen",
        "-lLLVMLanaiAsmParser",
        "-lLLVMLanaiDesc",
        "-lLLVMLanaiInfo",
        "-lLLVMHexagonDisassembler",
        "-lLLVMHexagonCodeGen",
        "-lLLVMHexagonAsmParser",
        "-lLLVMHexagonDesc",
        "-lLLVMHexagonInfo",
        "-lLLVMBPFDisassembler",
        "-lLLVMBPFAsmParser",
        "-lLLVMBPFCodeGen",
        "-lLLVMBPFDesc",
        "-lLLVMBPFInfo",
        "-lLLVMAVRDisassembler",
        "-lLLVMAVRAsmParser",
        "-lLLVMAVRCodeGen",
        "-lLLVMAVRDesc",
        "-lLLVMAVRInfo",
        "-lLLVMARMDisassembler",
        "-lLLVMARMAsmParser",
        "-lLLVMARMCodeGen",
        "-lLLVMARMDesc",
        "-lLLVMARMUtils",
        "-lLLVMARMInfo",
        "-lLLVMAMDGPUTargetMCA",
        "-lLLVMAMDGPUDisassembler",
        "-lLLVMAMDGPUAsmParser",
        "-lLLVMAMDGPUCodeGen",
        "-lLLVMAMDGPUDesc",
        "-lLLVMAMDGPUUtils",
        "-lLLVMAMDGPUInfo",
        "-lLLVMAArch64Disassembler",
        "-lLLVMAArch64AsmParser",
        "-lLLVMAArch64CodeGen",
        "-lLLVMAArch64Desc",
        "-lLLVMAArch64Utils",
        "-lLLVMAArch64Info",
        "-lLLVMOrcJIT",
        "-lLLVMWindowsDriver",
        "-lLLVMMCJIT",
        "-lLLVMJITLink",
        "-lLLVMInterpreter",
        "-lLLVMExecutionEngine",
        "-lLLVMRuntimeDyld",
        "-lLLVMOrcTargetProcess",
        "-lLLVMOrcShared",
        "-lLLVMDWP",
        "-lLLVMDebugInfoLogicalView",
        "-lLLVMDebugInfoGSYM",
        "-lLLVMOption",
        "-lLLVMObjectYAML",
        "-lLLVMObjCopy",
        "-lLLVMMCA",
        "-lLLVMMCDisassembler",
        "-lLLVMLTO",
        "-lLLVMCFGuard",
        "-lLLVMFrontendOpenACC",
        "-lLLVMFrontendHLSL",
        "-lLLVMExtensions",
        "-lPolly",
        "-lPollyISL",
        "-lLLVMPasses",
        "-lLLVMCoroutines",
        "-lLLVMipo",
        "-lLLVMInstrumentation",
        "-lLLVMVectorize",
        "-lLLVMLinker",
        "-lLLVMFrontendOpenMP",
        "-lLLVMDWARFLinkerParallel",
        "-lLLVMDWARFLinker",
        "-lLLVMGlobalISel",
        "-lLLVMMIRParser",
        "-lLLVMAsmPrinter",
        "-lLLVMSelectionDAG",
        "-lLLVMCodeGen",
        "-lLLVMObjCARCOpts",
        "-lLLVMIRPrinter",
        "-lLLVMInterfaceStub",
        "-lLLVMFileCheck",
        "-lLLVMFuzzMutate",
        "-lLLVMTarget",
        "-lLLVMScalarOpts",
        "-lLLVMInstCombine",
        "-lLLVMAggressiveInstCombine",
        "-lLLVMTransformUtils",
        "-lLLVMBitWriter",
        "-lLLVMAnalysis",
        "-lLLVMProfileData",
        "-lLLVMSymbolize",
        "-lLLVMDebugInfoPDB",
        "-lLLVMDebugInfoMSF",
        "-lLLVMDebugInfoDWARF",
        "-lLLVMObject",
        "-lLLVMTextAPI",
        "-lLLVMMCParser",
        "-lLLVMIRReader",
        "-lLLVMAsmParser",
        "-lLLVMMC",
        "-lLLVMDebugInfoCodeView",
        "-lLLVMBitReader",
        "-lLLVMFuzzerCLI",
        "-lLLVMCore",
        "-lLLVMRemarks",
        "-lLLVMBitstreamReader",
        "-lLLVMBinaryFormat",
        "-lLLVMTargetParser",
        "-lLLVMTableGen",
        "-lLLVMSupport",
        "-lLLVMDemangle",
    ],
    deps = [
        "@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:headers",
        "@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:static_libs",
        "@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:LLVMPolly",
    ],
)


genrule(
    name = "make_clang",
    srcs = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:clang"],
    outs = ["clang"],
    cmd = "cp $< $@ && chmod +x $@",
)

genrule(
    name = "make_clang++",
    srcs = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:clang++"],
    outs = ["clang++"],
    cmd = "cp $< $@ && chmod +x $@",
)

genrule(
    name = "make_opt",
    srcs = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:opt"],
    outs = ["opt"],
    cmd = "cp $< $@ && chmod +x $@",
)
