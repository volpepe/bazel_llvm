# LLVM 16.0.0.
package(default_visibility = ["//visibility:public"])

licenses(["notice"])

cc_library(
    name = "16.0.0",
    data = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:libdir"],
    defines = [
        "__STDC_CONSTANT_MACROS",
        "__STDC_LIMIT_MACROS",
    ],
    linkopts = [
        "-Wl,-rpath,$(location @clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:libdir)/",
        "-L$(location @clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:libdir)/",
        "-lrt",
        "-ldl",
        "-ltinfo",
        "-lpthread",
        "-lm",
        "-lz",
       # clang libs
        "-lclangARCMigrate",
        "-lclangFrontend",
        "-lclangFrontendTool",
        "-lclangDriver",
        "-lclangSerialization",
        "-lclangCodeGen",
        "-lclangParse",
        "-lclangSema",
        "-lclangRewriteFrontend",
        "-lclangRewrite",
        "-lclangStaticAnalyzerFrontend",
        "-lclangStaticAnalyzerCheckers",
        "-lclangStaticAnalyzerCore",
        "-lclangAnalysis",
        "-lclangEdit",
        "-lclangAST",
        "-lclangASTMatchers",
        "-lclangLex",
        "-lclangBasic",
        "-lclangTooling",
        "-lclangToolingCore",
        # llvm-config --libs
        "-llibLLVMBinaryFormat",
        "-llibLLVMBitstreamReader",
        "-llibLLVMRemarks",
        "-llibLLVMCore",
        "-llibLLVMFuzzerCLI",
        "-llibLLVMBitReader",
        "-llibLLVMDebugInfoCodeView",
        "-llibLLVMMC",
        "-llibLLVMAsmParser",
        "-llibLLVMIRReader",
        "-llibLLVMMCParser",
        "-llibLLVMTextAPI",
        "-llibLLVMObject",
        "-llibLLVMDebugInfoDWARF",
        "-llibLLVMDebugInfoMSF",
        "-llibLLVMDebugInfoPDB",
        "-llibLLVMSymbolize",
        "-llibLLVMProfileData",
        "-llibLLVMAnalysis",
        "-llibLLVMBitWriter",
        "-llibLLVMTransformUtils",
        "-llibLLVMAggressiveInstCombine",
        "-llibLLVMInstCombine",
        "-llibLLVMScalarOpts",
        "-llibLLVMTarget",
        "-llibLLVMFuzzMutate",
        "-llibLLVMFileCheck",
        "-llibLLVMInterfaceStub",
        "-llibLLVMIRPrinter",
        "-llibLLVMObjCARCOpts",
        "-llibLLVMCodeGen",
        "-llibLLVMSelectionDAG",
        "-llibLLVMAsmPrinter",
        "-llibLLVMMIRParser",
        "-llibLLVMGlobalISel",
        "-llibLLVMDWARFLinker",
        "-llibLLVMDWARFLinkerParallel",
        "-llibLLVMExtensions",
        "-llibLLVMFrontendHLSL",
        "-llibLLVMFrontendOpenACC",
        "-llibLLVMFrontendOpenMP",
        "-llibLLVMInstrumentation",
        "-llibLLVMLinker",
        "-llibLLVMVectorize",
        "-llibLLVMipo",
        "-llibLLVMCoroutines",
        "-llibLLVMCFGuard",
        "-llibLLVMPasses",
        "-llibLLVMLTO",
        "-llibLLVMMCDisassembler",
        "-llibLLVMMCA",
        "-llibLLVMObjCopy",
        "-llibLLVMObjectYAML",
        "-llibLLVMOption",
        "-llibLLVMDebugInfoGSYM",
        "-llibLLVMDebugInfoLogicalView",
        "-llibLLVMDWP",
        "-llibLLVMOrcShared",
        "-llibLLVMOrcTargetProcess",
        "-llibLLVMRuntimeDyld",
        "-llibLLVMExecutionEngine",
        "-llibLLVMInterpreter",
        "-llibLLVMJITLink",
        "-llibLLVMMCJIT",
        "-llibLLVMWindowsDriver",
        "-llibLLVMOrcJIT",
        "-llibLLVMAArch64Info",
        "-llibLLVMAArch64Utils",
        "-llibLLVMAArch64Desc",
        "-llibLLVMAArch64CodeGen",
        "-llibLLVMAArch64AsmParser",
        "-llibLLVMAArch64Disassembler",
        "-llibLLVMAMDGPUInfo",
        "-llibLLVMAMDGPUUtils",
        "-llibLLVMAMDGPUDesc",
        "-llibLLVMAMDGPUCodeGen",
        "-llibLLVMAMDGPUAsmParser",
        "-llibLLVMAMDGPUDisassembler",
        "-llibLLVMAMDGPUTargetMCA",
        "-llibLLVMARMInfo",
        "-llibLLVMARMUtils",
        "-llibLLVMARMDesc",
        "-llibLLVMARMCodeGen",
        "-llibLLVMARMAsmParser",
        "-llibLLVMARMDisassembler",
        "-llibLLVMAVRInfo",
        "-llibLLVMAVRDesc",
        "-llibLLVMAVRCodeGen",
        "-llibLLVMAVRAsmParser",
        "-llibLLVMAVRDisassembler",
        "-llibLLVMBPFInfo",
        "-llibLLVMBPFDesc",
        "-llibLLVMBPFCodeGen",
        "-llibLLVMBPFAsmParser",
        "-llibLLVMBPFDisassembler",
        "-llibLLVMHexagonInfo",
        "-llibLLVMHexagonDesc",
        "-llibLLVMHexagonAsmParser",
        "-llibLLVMHexagonCodeGen",
        "-llibLLVMHexagonDisassembler",
        "-llibLLVMLanaiInfo",
        "-llibLLVMLanaiDesc",
        "-llibLLVMLanaiAsmParser",
        "-llibLLVMLanaiCodeGen",
        "-llibLLVMLanaiDisassembler",
        "-llibLLVMLoongArchInfo",
        "-llibLLVMLoongArchDesc",
        "-llibLLVMLoongArchCodeGen",
        "-llibLLVMLoongArchAsmParser",
        "-llibLLVMLoongArchDisassembler",
        "-llibLLVMMipsInfo",
        "-llibLLVMMipsDesc",
        "-llibLLVMMipsCodeGen",
        "-llibLLVMMipsAsmParser",
        "-llibLLVMMipsDisassembler",
        "-llibLLVMMSP430Info",
        "-llibLLVMMSP430Desc",
        "-llibLLVMMSP430CodeGen",
        "-llibLLVMMSP430AsmParser",
        "-llibLLVMMSP430Disassembler",
        "-llibLLVMNVPTXInfo",
        "-llibLLVMNVPTXDesc",
        "-llibLLVMNVPTXCodeGen",
        "-llibLLVMPowerPCInfo",
        "-llibLLVMPowerPCDesc",
        "-llibLLVMPowerPCCodeGen",
        "-llibLLVMPowerPCAsmParser",
        "-llibLLVMPowerPCDisassembler",
        "-llibLLVMRISCVInfo",
        "-llibLLVMRISCVDesc",
        "-llibLLVMRISCVCodeGen",
        "-llibLLVMRISCVAsmParser",
        "-llibLLVMRISCVDisassembler",
        "-llibLLVMRISCVTargetMCA",
        "-llibLLVMSparcInfo",
        "-llibLLVMSparcDesc",
        "-llibLLVMSparcCodeGen",
        "-llibLLVMSparcAsmParser",
        "-llibLLVMSparcDisassembler",
        "-llibLLVMSystemZInfo",
        "-llibLLVMSystemZDesc",
        "-llibLLVMSystemZCodeGen",
        "-llibLLVMSystemZAsmParser",
        "-llibLLVMSystemZDisassembler",
        "-llibLLVMVEInfo",
        "-llibLLVMVEDesc",
        "-llibLLVMVECodeGen",
        "-llibLLVMVEAsmParser",
        "-llibLLVMVEDisassembler",
        "-llibLLVMWebAssemblyInfo",
        "-llibLLVMWebAssemblyUtils",
        "-llibLLVMWebAssemblyDesc",
        "-llibLLVMWebAssemblyCodeGen",
        "-llibLLVMWebAssemblyAsmParser",
        "-llibLLVMWebAssemblyDisassembler",
        "-llibLLVMX86Info",
        "-llibLLVMX86Desc",
        "-llibLLVMX86CodeGen",
        "-llibLLVMX86AsmParser",
        "-llibLLVMX86Disassembler",
        "-llibLLVMX86TargetMCA",
        "-llibLLVMXCoreInfo",
        "-llibLLVMXCoreDesc",
        "-llibLLVMXCoreCodeGen",
        "-llibLLVMXCoreDisassembler",
        "-llibLLVMLineEditor",
        "-llibLLVMCoverage",
        "-llibLLVMDlltoolDriver",
        "-llibLLVMLibDriver",
        "-llibLLVMXRay",
        "-llibLLVMWindowsManifest",
    ],
    deps = [
        "@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:headers",
        "@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:static_libs",
        "@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:LLVMPolly",
    ],
)


genrule(
    name = "make_clang",
    srcs = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:clang"],
    outs = ["clang"],
    cmd = "cp $< $@ && chmod +x $@",
)

genrule(
    name = "make_clang++",
    srcs = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:clang++"],
    outs = ["clang++"],
    cmd = "cp $< $@ && chmod +x $@",
)

genrule(
    name = "make_opt",
    srcs = ["@clang-llvm-16.0.0-x86_64-linux-gnu-ubuntu-18.04//:opt"],
    outs = ["opt"],
    cmd = "cp $< $@ && chmod +x $@",
)
